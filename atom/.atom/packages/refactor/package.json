{
  "name": "refactor",
  "main": "./lib/refactor",
  "version": "0.4.0",
  "description": "Refactoring support",
  "repository": {
    "type": "git",
    "url": "https://github.com/minodisk/refactor"
  },
  "license": "MIT",
  "auther": {
    "name": "Daisuke Mino",
    "url": "http://dsk.mn"
  },
  "engines": {
    "atom": ">0.50.0"
  },
  "scripts": {
    "test": "apm test"
  },
  "dependencies": {
    "eventemitter2": "^0.4.14",
    "semver": "^2.3.1"
  },
  "devDependencies": {
    "grunt": "^0.4.5",
    "grunt-este-watch": "^0.1.16",
    "grunt-notify": "^0.3.0"
  },
  "readme": "# Refactor Package\n\n**:zap:Notification:zap:: Activate 'Use React Editor' in preferences pane.**\nRefactor package greater than v0.3 no longer supports for the legacy editor.\nIf you want more info about the React Editor, you can see [React Editor Enabled by Default](http://blog.atom.io/2014/07/22/default-to-react-editor.html).\n\nLet's refactor code!\nWith this package, you can rename the name of variables and functions easily.\n\n![capture_rename](https://cloud.githubusercontent.com/assets/514164/2929354/b4e848d4-d788-11e3-99c2-620f406d5e6f.gif)\n\n## Language plugins\n\nThis package works with these language plugins.\nYou can install using the preferences pane.\n\n* [coffee-refactor](https://atom.io/packages/coffee-refactor) for CoffeeScript\n* [js-refactor](https://atom.io/packages/js-refactor) for JavaScript\n\n## Usage\n\n1. Set cursor to a symbol.\n2. Start renaming by using `ctrl-alt-r`.\n3. Type new name.\n4. Finish renaming by using `enter` or removing cursor from the focused symbol.\n\n## User setting\n\n* Override [keymap](kaymaps/refactor.cson) by using `Atom > Open Your Keymap`.\n* Override [stylesheet](stylesheets/refactor.less) by using `Atom > Open Your Stylesheet`.\n\n## API Documentation (for plugin developer)\n\n### package.json\n\nAdd `refactor` as `engines` in `package.json`.\n\n```\n{\n  ...\n  \"engines\": {\n    \"atom\": \">0.50.0\",\n    \"refactor\": \"*\"\n  },\n  ...\n}\n```\n\n### Interface\n\nImplement `Ripper` class in main module.\n\n* `Ripper.scopeNames []String` : **[Required]** Array of scope name, like 'source.coffee', 'source.js' and all that.\n* `Ripper#parse(code String, callback Function)` : **[Required]** Parse code, and you should callback when the parsing process is done. Callback specify the params as an array of `Error`. `Error` should have params `range` and `message`.\n* `Ripper#find(point Point, editor Editor) []Range` : **[Required]** Array of found symbol's `Range`.\n\n### Examples\n\n* [minodisk/coffee-refactor](https://github.com/minodisk/coffee-refactor)\n* [minodisk/js-refactor](https://github.com/minodisk/js-refactor)\n\n\n## See\n\n* [Changelog](CHANGELOG.md)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/minodisk/refactor/issues"
  },
  "homepage": "https://github.com/minodisk/refactor",
  "_id": "refactor@0.4.0",
  "dist": {
    "shasum": "d9647b328afb842f159efaff97a8aa6b2cf5f0d8"
  },
  "_resolved": "/var/folders/9l/q9klhdys15xcxrqxpmh76ccr0000gn/T/d-11478-48391-ocaohh/package.tgz",
  "_from": "/var/folders/9l/q9klhdys15xcxrqxpmh76ccr0000gn/T/d-11478-48391-ocaohh/package.tgz"
}
