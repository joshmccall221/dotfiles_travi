[user]
    name = Matt Travi

[github]
    user = travi

[diff]
    renames = copy
    tool = p4mergetool

[merge]
    tool = p4mergetool

[color]
    ui = true

[color "status"]
    branch = yellow bold
    header = cyan
    added = green
    changed = red
    untracked = magenta

[color "branch"]
    current = green
    local = cyan
    remote = magenta

[color "diff"]
    meta = yellow bold
    whitespace = red reverse

[core]
    autocrlf = input
    longpaths = true
    whitespace=fix,tab-in-indent,trailing-space,cr-at-eol
    excludesfile = ~/.gitignore

[push]
    # Git 1.x default to work on legacy machines (pre-v1.8)
    # use `simple` in .gitconfig.extra on machines with newer git installed
    default = matching

[branch]
    autorebase = always

[alias]
    st = status
    co = checkout
    cb = checkout -b
    out = log --pretty=oneline --abbrev-commit --graph @{u}..
    in = !git fetch && git log --pretty=oneline --abbrev-commit --graph ..@{u}
    rb = rebase
    undo = reset --hard
    pop = stash pop
    ignored = ls-files -o -i --exclude-standard

    # Log formats
    lg = log -20 --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr by %an)%Creset' --abbrev-commit --date=relative
    lg1 = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
    lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all

    # Show verbose output about tags, branches or remotes
    tags = tag -l
    branches = branch -a
    remotes = remote -v

    # Stage and print status
    # Defaults to stage all, but only if nothing else is staged
    ad = "!f() { if [ ! -z \"$1\" ] || git diff --cached --quiet; then git add -A \"$1\" && git status; else echo \"Staging prevented\"; return 8; fi }; f"

    # Remove branches that have already been merged with master
    # a.k.a. ‘delete merged’
    dm = "!git branch --merged master | grep -v '\\master' | xargs -n 1 git branch -d"

    # Clean Slate
    cs = "!git co master && git pull && git dm && git remote prune origin && git submodule update"

    # List contributors with number of commits
    contributors = shortlog --summary --numbered

[include]
    path = ~/.gitconfig.extra
    path = ~/.gitconfig.os
