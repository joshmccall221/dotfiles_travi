[user]
	name = Matt Travi

[github]
    user = travi

[diff]
	renames = copy

[color]
	ui = true

[color "status"]
    branch = yellow bold
    header = cyan
    added = green
    changed = red
    untracked = magenta

[color "branch"]
    current = green
    local = cyan
    remote = magenta

[color "diff"]
    meta = yellow bold

[core]
	autocrlf = input
	longpaths = true

[push]
    # Git 1.x default to work on legacy machines (pre-v1.8)
    # use simple in .gitconfig.extra on machines with newer git installed
	default = matching

[branch]
	autorebase = always

[alias]
    ad = "!f() { git add -A $1 && git status; }; f"
    st = status
    co = checkout
    out = log --pretty=oneline --abbrev-commit --graph @{u}..
    in = !git fetch && git log --pretty=oneline --abbrev-commit --graph ..@{u}
    rb = rebase
    undo = reset --hard
    pop = stash pop
    ignored = ls-files -o -i --exclude-standard

    # Log formats
    lg = log -20 --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr by %an)%Creset' --abbrev-commit --date=relative
    lg1 = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
    lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all

    # Show verbose output about tags, branches or remotes
    tags = tag -l
    branches = branch -a
    remotes = remote -v

    # Remove branches that have already been merged with master
    # a.k.a. ‘delete merged’
    dm = "!git branch --merged master | grep -v '\\master' | xargs -n 1 git branch -d"

    # List contributors with number of commits
    contributors = shortlog --summary --numbered

[include]
    path = ~/.gitconfig.extra
